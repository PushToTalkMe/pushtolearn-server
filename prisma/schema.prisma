generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  hash String
	salt String
	role String
	account Account?
  myCourses MyCourse[]
  comments Comment[]
  userStatLesson UserStatLesson[]
}

model Account {
  id Int @id @default(autoincrement())
  userId Int @unique
  user User @relation(fields: [userId], references: [id])
  firstName String
	lastName String
	username String
  avatar String
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
}

model MyCourse {
	id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId], references: [id])
	courseId Int
  course Course @relation(fields: [courseId], references: [id])
  lessonCompleted Int
  historySectionId Int
  historyLessonId Int
  createdAt DateTime @default(now())
}

model UserStatLesson {
  id Int @id @default(autoincrement())
  viewed Boolean
  userId Int
  user User @relation(fields: [userId], references: [id])
  lessonId Int
  lesson Lesson @relation(fields: [lessonId], references: [id])
}

model Course {
  id Int @id @default(autoincrement())
	title String
	author String
	img String
	duration String
	tags String[]
	price Int
  myCourses MyCourse[]
	sections Section[]
  createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
}

model Section {
  id Int @id @default(autoincrement())
  title String
  lessons Lesson[]
  courseId Int
  sequence Int
  course Course @relation(fields: [courseId], references: [id])
  createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
}

model Lesson {
	id Int @id @default(autoincrement())
	sectionId Int
	section Section @relation(fields: [sectionId], references: [id])
	title String
  sequence Int
	theory Theory?
  test Test?
  exercise Exercise?
  userStatLesson UserStatLesson[]
	type LessonType
  comments Comment[]
  createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
}

model Comment {
  id Int @id @default(autoincrement())
	userId Int
  user User @relation(fields: [userId], references: [id])
  email String
  firstName String
	lastName String
	lessonId Int
  lesson Lesson @relation(fields: [lessonId], references: [id])
  text String
  createdAt DateTime @default(now())
}

model Theory {
  content String
  lesson Lesson @relation(fields: [lessonId], references: [id])
  lessonId Int @unique
}

model Test {
  questions String
  lesson Lesson @relation(fields: [lessonId], references: [id])
  lessonId Int @unique
}

model Exercise {
  tasks String
  lesson Lesson @relation(fields: [lessonId], references: [id])
  lessonId Int @unique
}

enum LessonType {
  Theory 
  Exercise
	Test
}